<!-- Content pagina -->
<div class="container-fluid">
  <div class="page-header">
    <h1 class="text-titles"><i class="zmdi zmdi-money-box zmdi-hc-fw"></i>Modificar<small>Estudiantes</small></h1>
  </div>
  <p class="lead">Rellenando el siguiente formulario podremos añadir al sistema un nuevo Alumno. 
   Este proceso solo podrá realizarlo el administrador.</p>
</div>
<div class="container-fluid">
  <div class="row">
    <div class="col-xs-12">
      <ul class="nav nav-tabs" style="margin-bottom: 15px;">
        <li><a href="/alumnos">Listado de Alumnos</a></li>
      </ul>
      <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade active in" id="new">
          <div class="container-fluid">
            <div class="row">
              <div class="col-xs-12 col-md-10 col-md-offset-1">
                <form method="post">
                    <input type="hidden" name="_method" value="PUT">
              <!-- ASIGNATURAS -->
                  <div class="form-group">
										<label class="control-label">Tipo de Etapa</label>
										<select class="form-control" name="tipoDisciplina" id="tipoDisciplina">
											<option>Etapa</option>
                      <option>FP</option>
										</select>
                  </div>
                <div class="form-group">
										<label class="control-label">Etapa</label>
										<select class="form-control" name="nombre_etapa" id="nombre_etapa">
											<option disabled selected>Seleccione una de las etapas</option>
										</select>
                  </div>
									<div class="form-group">
										<label  class="control-label">Indique el FP al cual se quiere matrricular</label>
										<select class="form-control" name="nombre_fp" id="nombre_fp" disabled>
											<option selected disabled>Seleccione una de los ciclos FP</option>
										</select>
                  <div class="form-group">
                    <label class="control-label">Proporcione el Curso</label>
                    <select class="form-control" name="n_cursos" id="n_cursos">
	                      <option selected disabled>Seleccione el curso</option> 
                      </select>
                  </div>
                   <div class="form-group">
                    <label class="control-label">Asigne las asignaturas a las cuales se va a matricular</label>
                    <select class="form-control" name="asignaturas" id="asignaturas" multiple>
	                      <option selected disabled>Seleccione las asignaturas</option> 
                      </select>
                  </div>  
                  <p class="text-center">
                    <button class="btn btn-info btn-raised btn-sm"><i class="zmdi zmdi-floppy"></i>Save</button>
                  </p>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!--SCRIPT PARA FP   -->

<script>

	(async () => {

            const tipoDisciplinaEl = document.querySelector('#tipoDisciplina');
            const etapaEl = document.querySelector("#nombre_etapa");
            const n_cursosEl = document.querySelector("#n_cursos");
            const fp = document.querySelector("#nombre_fp");
            
            const responseEtapa  = await fetch('/select_etapa');
            const etapa = await responseEtapa.json();
            let etapaFilter = etapa.filter(e => e.nombre === 'GRADO_MEDIO' || e.nombre === 'GRADO_SUPERIOR');
            
            tipoDisciplinaEl.addEventListener('change', async () => {

              if(tipoDisciplinaEl.value === 'FP') {
					      etapaFilter = etapa.filter(e => e.nombre === 'GRADO_MEDIO' || e.nombre === 'GRADO_SUPERIOR');
				      }else {
					      etapaFilter = etapa.filter(e => e.nombre !== 'GRADO_MEDIO' && e.nombre !== 'GRADO_SUPERIOR');
				      }

              etapaEl.innerHTML = '';
              disabledOptionetapaEl = document.createElement('option');
              disabledOptionetapaEl.setAttribute('disabled', '');
              disabledOptionetapaEl.setAttribute('selected', '');
              disabledOptionetapaEl.innerText = '---';
              etapaEl.appendChild(disabledOptionetapaEl);
              etapaFilter.map(e => {
                let opt = document.createElement('option');
                opt.value = e._id;
                opt.dataset.cursos = e.n_cursos;
                opt.innerText = e.nombre;
                etapaEl.appendChild(opt);
              })
            })

                etapaFilter.map(e => {
                    let opt = document.createElement('option');
                    opt.value = e._id;
                    opt.dataset.cursos = e.n_cursos;
                    opt.innerText = e.nombre;
                    etapaEl.appendChild(opt);
                })

            etapaEl.addEventListener("change", async (event) => {
              const currentEtapa = etapaEl.value;
              const n_cursos_etapa = event.target.options[event.target.selectedIndex].dataset.cursos;


              let responseFP = await fetch(`/select_fp/${currentEtapa}`);
              currentFP = await responseFP.json();

              console.log(currentFP.length > 0)

              if(currentFP.length > 0) {
                console.log('Enabled')
                fp.disabled = false;
              } else {
                console.log('Disabled')
                fp.disabled = true
              }

              n_cursosEl.innerHTML = '';

              let disabledCurso = document.createElement('option');
              disabledCurso.innerText = '---';
              disabledCurso.setAttribute('disabled', true);
              disabledCurso.setAttribute('selected', true);
              n_cursosEl.appendChild(disabledCurso);

              for(let i = 1; i <= parseInt(n_cursos_etapa); i++) {
                const opt = document.createElement('option');
                opt.value = i;
                opt.innerText = `${i}º`;
                n_cursosEl.appendChild(opt);
              }
              
              if(!currentFP) return alert('No existe ese FP!');
              
              fp.innerHTML = '';
              let disabledOptFP = document.createElement('option');
              disabledOptFP.innerHTML = '---';
              disabledOptFP.setAttribute('disabled', true);
              disabledOptFP.setAttribute('selected', true);
              fp.appendChild(disabledOptFP);
              currentFP.map( f => {
                  let opt = document.createElement('option');
                  opt.value = f._id;
                  opt.innerText = f.nombre;
                  fp.appendChild(opt);
              })
            })

            etapaEl.addEventListener("change", async () => {
                const currentEtapa = etapaEl.value;
                let responseCursos = await fetch(`/select_cursos/${currentEtapa}`);
                responseCursos = await responseCursos.json();
                
                if(!responseCursos) return alert('No existe ese Curso');
                
                fp.removeAttribute('disabled');
                fp.innerHTML = '';
                let disabledOptFP = document.createElement('option');
                disabledOptFP.innerHTML = '---';
                disabledOptFP.setAttribute('disabled', true);
                disabledOptFP.setAttribute('selected', true);
                fp.appendChild(disabledOptFP);
                responseCursos.map( f => {
                    let opt = document.createElement('option');
                    opt.value = f._id;
                    opt.innerText = f.nombre;
                    console.log(f);
                    fp.appendChild(opt);
                })
            })
            

        })
  ()
</script> 


<!--SCRIPT PARA ASIGNATURAS  -->

<script>

	(async () => {
            const asignaturas_el = document.querySelector("#asignaturas");
            const ciclo_el = document.querySelector("#nombre_fp");
            const etapa_el = document.querySelector('#nombre_etapa')
            const cursos_el = document.querySelector("#n_cursos")

            const responseAsignaturas = await fetch('/select_asignaturas');
            const asignaturas = await responseAsignaturas.json();
            asignaturas.map(a => {
                let opt = document.createElement('option');
                opt.value = a._id;
                opt.innerText = a.nombre;
                asignaturas_el.appendChild(opt);
            })

            cursos_el.addEventListener("change", async () => {
                const selectedCurso = cursos_el.value;
                let currentCurso = ciclo_el.value;
                let url = `/select_asignaturas/${currentCurso}/${selectedCurso}`;
                if(currentCurso === '---') {
                  currentCurso = etapa_el.value;
                  url = `/select_asignaturas_nofp/${currentCurso}/${selectedCurso}`;
                }
                let responseasignatura = await fetch(url);
                responseasignatura = await responseasignatura.json();

                console.log(responseAsignaturas)
            
                asignaturas_el.innerHTML = '';
                let disabledOptasignatura = document.createElement('option');
                disabledOptasignatura.innerHTML = '---';
                disabledOptasignatura.setAttribute('disabled', true);
                disabledOptasignatura.setAttribute('selected', true);
                asignaturas_el.appendChild(disabledOptasignatura);
                responseasignatura.map( c => {
                    let opt = document.createElement('option');
                    opt.value = c._id;
                    opt.innerText = c.nombre_asignatura;
                    console.log(c);
                    asignaturas_el.appendChild(opt);
                })

            })

        })()
</script> 


  

